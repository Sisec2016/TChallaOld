// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pos_request.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pos_request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* pos_request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pos_request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* pos_request_RequestType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* pos_respone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pos_respone_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_pos_5frequest_2eproto() {
  protobuf_AddDesc_pos_5frequest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pos_request.proto");
  GOOGLE_CHECK(file != NULL);
  pos_request_descriptor_ = file->message_type(0);
  static const int pos_request_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pos_request, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pos_request, table_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pos_request, condtion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pos_request, extra_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pos_request, data_),
  };
  pos_request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      pos_request_descriptor_,
      pos_request::default_instance_,
      pos_request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pos_request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pos_request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(pos_request));
  pos_request_RequestType_descriptor_ = pos_request_descriptor_->enum_type(0);
  pos_respone_descriptor_ = file->message_type(1);
  static const int pos_respone_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pos_respone, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pos_respone, pbdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pos_respone, data_),
  };
  pos_respone_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      pos_respone_descriptor_,
      pos_respone::default_instance_,
      pos_respone_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pos_respone, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pos_respone, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(pos_respone));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pos_5frequest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    pos_request_descriptor_, &pos_request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    pos_respone_descriptor_, &pos_respone::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_pos_5frequest_2eproto() {
  delete pos_request::default_instance_;
  delete pos_request_reflection_;
  delete pos_respone::default_instance_;
  delete pos_respone_reflection_;
}

void protobuf_AddDesc_pos_5frequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021pos_request.proto\"\264\001\n\013pos_request\022&\n\004t"
    "ype\030\001 \002(\0162\030.pos_request.RequestType\022\022\n\nt"
    "able_name\030\003 \002(\t\022\020\n\010condtion\030\004 \002(\t\022\022\n\next"
    "ra_info\030\005 \003(\t\022\014\n\004data\030\006 \003(\014\"5\n\013RequestTy"
    "pe\022\r\n\tDOWN_LOAD\020\000\022\013\n\007UP_LOAD\020\001\022\n\n\006DELETE"
    "\020\002\":\n\013pos_respone\022\r\n\005error\030\001 \002(\t\022\016\n\006PBda"
    "ta\030\002 \003(\014\022\014\n\004data\030\003 \003(\t", 262);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pos_request.proto", &protobuf_RegisterTypes);
  pos_request::default_instance_ = new pos_request();
  pos_respone::default_instance_ = new pos_respone();
  pos_request::default_instance_->InitAsDefaultInstance();
  pos_respone::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pos_5frequest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pos_5frequest_2eproto {
  StaticDescriptorInitializer_pos_5frequest_2eproto() {
    protobuf_AddDesc_pos_5frequest_2eproto();
  }
} static_descriptor_initializer_pos_5frequest_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* pos_request_RequestType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pos_request_RequestType_descriptor_;
}
bool pos_request_RequestType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const pos_request_RequestType pos_request::DOWN_LOAD;
const pos_request_RequestType pos_request::UP_LOAD;
const pos_request_RequestType pos_request::DELETE;
const pos_request_RequestType pos_request::RequestType_MIN;
const pos_request_RequestType pos_request::RequestType_MAX;
const int pos_request::RequestType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int pos_request::kTypeFieldNumber;
const int pos_request::kTableNameFieldNumber;
const int pos_request::kCondtionFieldNumber;
const int pos_request::kExtraInfoFieldNumber;
const int pos_request::kDataFieldNumber;
#endif  // !_MSC_VER

pos_request::pos_request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void pos_request::InitAsDefaultInstance() {
}

pos_request::pos_request(const pos_request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void pos_request::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  condtion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

pos_request::~pos_request() {
  SharedDtor();
}

void pos_request::SharedDtor() {
  if (table_name_ != &::google::protobuf::internal::kEmptyString) {
    delete table_name_;
  }
  if (condtion_ != &::google::protobuf::internal::kEmptyString) {
    delete condtion_;
  }
  if (this != default_instance_) {
  }
}

void pos_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pos_request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pos_request_descriptor_;
}

const pos_request& pos_request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pos_5frequest_2eproto();
  return *default_instance_;
}

pos_request* pos_request::default_instance_ = NULL;

pos_request* pos_request::New() const {
  return new pos_request;
}

void pos_request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_table_name()) {
      if (table_name_ != &::google::protobuf::internal::kEmptyString) {
        table_name_->clear();
      }
    }
    if (has_condtion()) {
      if (condtion_ != &::google::protobuf::internal::kEmptyString) {
        condtion_->clear();
      }
    }
  }
  extra_info_.Clear();
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool pos_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pos_request.RequestType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pos_request_RequestType_IsValid(value)) {
            set_type(static_cast< ::pos_request_RequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_table_name;
        break;
      }

      // required string table_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_table_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->table_name().data(), this->table_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_condtion;
        break;
      }

      // required string condtion = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_condtion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_condtion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->condtion().data(), this->condtion().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_extra_info;
        break;
      }

      // repeated string extra_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_extra_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_extra_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->extra_info(this->extra_info_size() - 1).data(),
            this->extra_info(this->extra_info_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_extra_info;
        if (input->ExpectTag(50)) goto parse_data;
        break;
      }

      // repeated bytes data = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void pos_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .pos_request.RequestType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required string table_name = 3;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->table_name(), output);
  }

  // required string condtion = 4;
  if (has_condtion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->condtion().data(), this->condtion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->condtion(), output);
  }

  // repeated string extra_info = 5;
  for (int i = 0; i < this->extra_info_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->extra_info(i).data(), this->extra_info(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->extra_info(i), output);
  }

  // repeated bytes data = 6;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* pos_request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .pos_request.RequestType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required string table_name = 3;
  if (has_table_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->table_name().data(), this->table_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->table_name(), target);
  }

  // required string condtion = 4;
  if (has_condtion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->condtion().data(), this->condtion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->condtion(), target);
  }

  // repeated string extra_info = 5;
  for (int i = 0; i < this->extra_info_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->extra_info(i).data(), this->extra_info(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->extra_info(i), target);
  }

  // repeated bytes data = 6;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(6, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int pos_request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pos_request.RequestType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // required string table_name = 3;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

    // required string condtion = 4;
    if (has_condtion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->condtion());
    }

  }
  // repeated string extra_info = 5;
  total_size += 1 * this->extra_info_size();
  for (int i = 0; i < this->extra_info_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->extra_info(i));
  }

  // repeated bytes data = 6;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pos_request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const pos_request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const pos_request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void pos_request::MergeFrom(const pos_request& from) {
  GOOGLE_CHECK_NE(&from, this);
  extra_info_.MergeFrom(from.extra_info_);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_table_name()) {
      set_table_name(from.table_name());
    }
    if (from.has_condtion()) {
      set_condtion(from.condtion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void pos_request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pos_request::CopyFrom(const pos_request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pos_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void pos_request::Swap(pos_request* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(table_name_, other->table_name_);
    std::swap(condtion_, other->condtion_);
    extra_info_.Swap(&other->extra_info_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata pos_request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pos_request_descriptor_;
  metadata.reflection = pos_request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int pos_respone::kErrorFieldNumber;
const int pos_respone::kPBdataFieldNumber;
const int pos_respone::kDataFieldNumber;
#endif  // !_MSC_VER

pos_respone::pos_respone()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void pos_respone::InitAsDefaultInstance() {
}

pos_respone::pos_respone(const pos_respone& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void pos_respone::SharedCtor() {
  _cached_size_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

pos_respone::~pos_respone() {
  SharedDtor();
}

void pos_respone::SharedDtor() {
  if (error_ != &::google::protobuf::internal::kEmptyString) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void pos_respone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pos_respone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pos_respone_descriptor_;
}

const pos_respone& pos_respone::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pos_5frequest_2eproto();
  return *default_instance_;
}

pos_respone* pos_respone::default_instance_ = NULL;

pos_respone* pos_respone::New() const {
  return new pos_respone;
}

void pos_respone::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::kEmptyString) {
        error_->clear();
      }
    }
  }
  pbdata_.Clear();
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool pos_respone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string error = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_PBdata;
        break;
      }

      // repeated bytes PBdata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PBdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_pbdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_PBdata;
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated string data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->data(this->data_size() - 1).data(),
            this->data(this->data_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void pos_respone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->error(), output);
  }

  // repeated bytes PBdata = 2;
  for (int i = 0; i < this->pbdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->pbdata(i), output);
  }

  // repeated string data = 3;
  for (int i = 0; i < this->data_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->data(i).data(), this->data(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* pos_respone::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error(), target);
  }

  // repeated bytes PBdata = 2;
  for (int i = 0; i < this->pbdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->pbdata(i), target);
  }

  // repeated string data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->data(i).data(), this->data(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int pos_respone::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  // repeated bytes PBdata = 2;
  total_size += 1 * this->pbdata_size();
  for (int i = 0; i < this->pbdata_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->pbdata(i));
  }

  // repeated string data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pos_respone::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const pos_respone* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const pos_respone*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void pos_respone::MergeFrom(const pos_respone& from) {
  GOOGLE_CHECK_NE(&from, this);
  pbdata_.MergeFrom(from.pbdata_);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void pos_respone::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pos_respone::CopyFrom(const pos_respone& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pos_respone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void pos_respone::Swap(pos_respone* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    pbdata_.Swap(&other->pbdata_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata pos_respone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pos_respone_descriptor_;
  metadata.reflection = pos_respone_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
